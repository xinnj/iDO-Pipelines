apiVersion: v1
kind: Pod
metadata:
  labels:
    macos-agent: "true"
spec:
  initContainers:
    - name: prepare
      image: docker.io/alpine:3.20.1
      command:
        - /bin/sh
        - -c
        - |
          set -euao pipefail
          
          case <macosImage> in
            http*)
              download_mode="url"
            ;;
            *)
              download_mode="file"
            ;;
          esac
          
          filename=$(basename <macosImage>)
          download_url=<macosImage>
          
          if ! [ -f "/home/arch/macos-image/${filename}" ]; then
            date
            echo "Copy ${download_url} to local..."
            cd /home/arch/macos-image
          
            if [ "$download_mode" == "url" ]; then
              wget -O ${filename}.download $download_url
            else
              cp -f "${$download_url}" ${filename}.download
            fi
            mv ${filename}.download ${filename}
          
            chown -R 1000:1000 /home/arch/macos-image
            date
          fi
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      volumeMounts:
        - mountPath: /Users/jenkins/agent
          name: workspace-volume
        - mountPath: /home/arch/macos-image
          name: macos-image-folder
  containers:
    - name: sonar-scanner
      image: "docker.io/sonarsource/sonar-scanner-cli:10.0.3.1430_5.0.1"
      imagePullPolicy: IfNotPresent
      command:
        - sleep
      args:
        - <keepBuilderPodMaxMinutes>m
      volumeMounts:
        - mountPath: /home/jenkins/agent
          name: workspace-volume
      env:
        - name: SONAR_USER_HOME
          value: /home/jenkins/agent/sonar
    - name: builder
      image: <builderImage>
      imagePullPolicy: IfNotPresent
      command:
        - /bin/sh
        - -c
        - |
          set -euaxo pipefail
          cd /home/arch/OSX-KVM
          export IMAGE_PATH=/home/arch/macos-image/$(basename $IMAGE_URL)
          ./Start.sh
          touch /home/arch/vm-started
          echo "Sleep for <keepBuilderPodMaxMinutes>m"
          sleep <keepBuilderPodMaxMinutes>m
      volumeMounts:
        - mountPath: /Users/jenkins/agent
          name: workspace-volume
        - mountPath: /home/arch/macos-image
          name: macos-image-folder
      resources:
        requests:
          cpu: "8"
          memory: 8Gi
        limits:
          cpu: "16"
          memory: 9Gi
      securityContext:
        privileged: true
      readinessProbe:
        exec:
          command:
            - /bin/sh
            - -c
            - ls /home/arch/vm-started
        initialDelaySeconds: 90
        periodSeconds: 5
      lifecycle:
        preStop:
          exec:
            command:
              - /bin/sh
              - -c
              - |
                pid=$(pgrep -f qemu-system-x86_64)
                if pwdx $pid > /dev/null 2>&1; then
                  ssh macos-host 'sudo shutdown -h now' > /proc/1/fd/1
                fi
                while pwdx $pid > /dev/null 2>&1; do
                  echo 'Shutting down macos...' > /proc/1/fd/1
                  sleep 1
                done
                echo 'Shutdown macos finished.' > /proc/1/fd/1
      env:
        - name: "HEADLESS"
          value: "true"
        - name: "IMAGE_URL"
          value: "<macosImage>"
        - name: "BOOTDISK"
          value: "/home/arch/macos-image/<macosImage>.boot"
        - name: "ENV"
          value: "/home/arch/macos-image/<macosImage>.env"
        - name: "RAM"
          value: "8"
        - name: "SMP"
          value: "16"
        - name: "CORES"
          value: "16"
        - name: "USERNAME"
          value: "<USERNAME>"
        - name: "PASSWORD"
          value: "<PASSWORD>"
        - name: "OSX_COMMANDS"
          value: "/bin/bash -c \"ioreg -l | grep IOPlatformSerialNumber\""
        - name: "CP_HOME_DIR"
          value: "/Users/jenkins/agent/CocoaPods"
        - name: "SPM_CACHE_DIR"
          value: "/Users/jenkins/agent/spm-cache"
    - name: uploader
      image: "docker.io/dwimberger/alpine-qr"
      imagePullPolicy: IfNotPresent
      command:
        - sleep
      args:
        - <keepBuilderPodMaxMinutes>m
      volumeMounts:
        - mountPath: /Users/jenkins/agent
          name: workspace-volume
    - name: jnlp
      image: "<inboundAgentImage>"
      workingDir: "/Users/jenkins/agent"
      env:
        - name: "JENKINS_AGENT_CACHEDIR"
          value: "/Users/jenkins/agent/remoting/jarCache"
  imagePullSecrets:
    - name: <imagePullSecret>
  securityContext:
    runAsGroup: 1000
    runAsUser: 1000
  volumes:
    - name: macos-image-folder
      hostPath:
        path: "/home/iDO-Cluster/macos-image"
        type: DirectoryOrCreate
  terminationGracePeriodSeconds: 30
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: macos-agent
                operator: In
                values:
                  - "true"
          topologyKey: "kubernetes.io/hostname"
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: vm-agent
              operator: In
              values:
                - "true"
