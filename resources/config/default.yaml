## Common process config
# All running and queued builds of the triggered job will be aborted if enabled
stopAllRunningBuild: true
# Source code root path. A relative path to workspace root folder
srcRootPath: "."
# Execute UT
utEnabled: false
# execute code analysis
codeAnalysisEnabled: false
qualityGateEnabled: false
sonarqubeTimeoutMinutes: 10

## Node config
# "standalone", "k8s"
nodeType: "standalone"
nodeName: ""
podTemplate: ""
keepBuilderPod: false
keepBuilderPodMinutes: 240

## Version config
# "GIT_DESCRIBE", "GIT_FILE", "JENKINS_BUILD_NUMBER"
versionMethod: "GIT_DESCRIBE"
# The git root path if versionMethod="GIT_DESCRIBE"
# The relative path of the directory in the workspace
versionRootPath: "."
# The file contains version data if versionMethod="GIT_FILE"
versionFile: "_version.txt"
# Specify the version of the build
version: ""

## Notification config
notification:
  # Notification type: "email", "slack", "dingtalk"
  type: []
  # Only notify failure result
  failureOnly: false
  # Send failure message to failure & success receivers
  sendFailureToSuccess: true
  # Email config
  email:
    # Folder property name, which value is a comma separated list of email recipients
    successReceiverFolderProperty: "IDO_NOTIFICATION_EMAIL"
    failureReceiverFolderProperty: "IDO_NOTIFICATION_FAILURE_EMAIL"
    # comma separated list of email recipients
    successReceiver: ""
    failureReceiver: ""
  # Slack config
  slack:
    successReceiverFolderProperty: "IDO_NOTIFICATION_SLACK"
    failureReceiverFolderProperty: "IDO_NOTIFICATION_FAILURE_SLACK"
    successReceiver: ""
    failureReceiver: ""
  # Dingtalk config
  dingtalk:
    successReceiverFolderProperty: "IDO_NOTIFICATION_DINGTALK"
    failureReceiverFolderProperty: "IDO_NOTIFICATION_FAILURE_DINGTALK"
    successReceiver: ""
    failureReceiver: ""

## Java common config
java:
  # "maven", "gradle"
  buildTool: "maven"
  # JDK version of build tool, can be "8", "11", "17", "19"
  jdkVersion: "8"
  mavenVersion: "3.8.6"
  useDefaultMavenSettings: true
  gradleVersion: "7.6"
  useDefaultGradleInitScript: true
  moduleName: "."
  forceUpdateDependencies: false
  jacocoLineCoverageThreshold: "0"

## Docker image config
imageName: ""
registryPull:
  url: ""
  credentialsId: ""
registryPush:
  url: "registry.cn-zhangjiakou.aliyuncs.com/bizconf_devops"
  credentialsId: "registry"

# Helm chart config
helm:
  buildChart: true
  chartPath: "helm"
  repo: "https://devops.bizconf.cn/nexus/repository/helm-hosted/"
  uploadCredentialId: "uploader"
  chartVersion: ""

## SpringBoot config
springBoot:
  mainClass: ""
  appRoot: "/app"
  baseImage: "amazoncorretto:8"
  jvmFlages: "-Duser.timezone=PRC -Dfile.encoding=UTF-8"
  environment: "TZ='Asia/Shanghai'"